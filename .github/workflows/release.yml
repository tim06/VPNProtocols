name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build sample APK
      - name: Build sample APK
        run: ./gradlew sample:assembleDebug

      # Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: sample-apk
          path: sample/build/outputs/apk/debug/*.apk

      - name: send APK build on success
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            VPNProtocols Build
            
            View: https://github.com/tim06/VPNProtocols/actions/runs/${{ github.run_id }}
          #document: ./sample/build/outputs/apk/debug/*.apk

      # Base64 decodes and pipes the GPG key content into the secret file
      - name: Prepare environment
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
        run: sudo bash -c "echo '$GPG_SIGNING_KEY' | base64 -d > '$SIGNING_KEY_STORE_PATH'"
      
      # Publish to Maven Central
      - name: Publish to Maven Central
        run: ./gradlew publishReleasePublicationToMavenCentralRepository
        env:
          mavenUsername: ${{ secrets.MAVEN_USERNAME }}
          mavenPassword: ${{ secrets.MAVEN_PASSWORD }}
          signingInMemoryKeyId: ${{ secrets.GPG_SIGNING_KEY_ID }}
          signingInMemoryKey: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          signingInMemoryKeyPassword: ${{ secrets.GPG_PASSWORD }}